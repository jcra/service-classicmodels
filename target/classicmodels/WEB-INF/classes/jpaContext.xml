<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	   xsi:schemaLocation="
    		http://www.springframework.org/schema/beans
    		http://www.springframework.org/schema/beans/spring-beans.xsd

    		http://www.springframework.org/schema/tx
    		http://www.springframework.org/schema/tx/spring-tx.xsd

    		http://www.springframework.org/schema/context
    		http://www.springframework.org/schema/context/spring-context.xsd

    		http://www.springframework.org/schema/data/jpa
    		http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
    		">

	<context:annotation-config />
	<context:component-scan base-package="org.classicmodels"/>

    <jpa:repositories base-package="org.classicmodels.repositories"/>

	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<!-- Define EntityManagerFactory and Datasource -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="punit" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="true" />
			</bean>
		</property>
		<property name="jpaPropertyMap">
			<map>
				<entry key="hibernate.dialect" value="org.hibernate.dialect.MySQL5InnoDBDialect"/>
				<!--<entry key="hibernate.dialect" value="org.hibernate.dialect.MySQLInnoDBDialect"/>-->
				<entry key="hibernate.hbm2ddl.auto" value="update"/>

				<!-- Values for hibernate.hbm2ddl.auto
					* create - create the DB base entities defined (the schema needs to be created)
					* create-drop - create the DB base entities defined when we start the application and drop the DB when we close the application 
					* update - will just update any fields that have changed, but not delete anything if we've to our record
					* validate - will go through and verify that what i have in my DB structure aligns with the object
					* none - doesn't do anything 
				 -->


				<entry key="hibernate.format_sql" value="true"/>
			</map>
		</property>
	</bean>

	<!-- Define Transaction Manager -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager"/>

	<!--<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">-->
		<!--<property name="driverClassName" value="com.mysql.jdbc.Driver"/>-->
		<!--<property name="url" value="jdbc:mysql://localhost:3306/classicmodels?autoReconnect=true"/>-->
		<!--<property name="username" value="root"/>-->
		<!--<property name="password" value="karlitos"/>-->
	<!--</bean>-->

	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:comp/env/jdbc/classicmodelsDB"/>
	</bean>
</beans>